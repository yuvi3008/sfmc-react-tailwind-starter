{"version":3,"file":"Input.js","names":["React","PropTypes","useInput","Input","ref","inputComponent","InputComponent","parse","format","value","defaultValue","onChange","controlled","onKeyDown","type","rest","inputProps","forwardRef","propTypes","func","isRequired","elementType","string","bool","onCut","onPaste"],"sources":["../../source/react/Input.js"],"sourcesContent":["// This is just `./ReactInput.js` rewritten in Hooks.\r\n\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport useInput from './useInput.js'\r\n\r\n// Usage:\r\n//\r\n// <ReactInput\r\n// \tvalue={this.state.phone}\r\n// \tonChange={phone => this.setState({ phone })}\r\n// \tparse={character => character}\r\n// \tformat={value => ({ text: value, template: 'xxxxxxxx' })}/>\r\n//\r\nfunction Input({\r\n\tinputComponent: InputComponent = 'input',\r\n\tparse,\r\n\tformat,\r\n\tvalue,\r\n\tdefaultValue,\r\n\tonChange,\r\n\tcontrolled,\r\n\tonKeyDown,\r\n\t// `<input/>` `type` attribute.\r\n\ttype = 'text',\r\n\t...rest\r\n}, ref) {\r\n\tconst inputProps = useInput({\r\n\t\tref,\r\n\t\tparse,\r\n\t\tformat,\r\n\t\tvalue,\r\n\t\tdefaultValue,\r\n\t\tonChange,\r\n\t\tcontrolled,\r\n\t\tonKeyDown,\r\n\t\ttype,\r\n\t\t...rest\r\n\t})\r\n\r\n\treturn (\r\n\t\t<InputComponent {...inputProps}/>\r\n\t)\r\n}\r\n\r\nInput = React.forwardRef(Input)\r\n\r\nInput.propTypes = {\r\n\t// Parses a single characher of `<input/>` text.\r\n\tparse: PropTypes.func.isRequired,\r\n\r\n\t// Formats `value` into `<input/>` text.\r\n\tformat: PropTypes.func.isRequired,\r\n\r\n\t// Renders `<input/>` by default.\r\n\tinputComponent: PropTypes.elementType,\r\n\r\n\t// `<input/>` `type` attribute.\r\n\ttype: PropTypes.string,\r\n\r\n\t// Is parsed from <input/> text.\r\n\tvalue: PropTypes.string,\r\n\r\n\t// An initial value for an \"uncontrolled\" <input/>.\r\n\tdefaultValue: PropTypes.string,\r\n\r\n\t// This handler is called each time `<input/>` text is changed.\r\n\tonChange: PropTypes.func,\r\n\r\n\t// Whether this input should be \"controlled\" or \"uncontrolled\".\r\n\t// The default value is `true` meaning \"uncontrolled\".\r\n\tcontrolled: PropTypes.bool,\r\n\r\n\t// Passthrough\r\n\tonKeyDown: PropTypes.func,\r\n\tonCut: PropTypes.func,\r\n\tonPaste: PropTypes.func\r\n}\r\n\r\nexport default Input"],"mappings":";;;;;;;;;;;;AAAA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,QAAP,MAAqB,eAArB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,KAAT,OAYGC,GAZH,EAYQ;EAAA,+BAXPC,cAWO;EAAA,IAXSC,cAWT,oCAX0B,OAW1B;EAAA,IAVPC,KAUO,QAVPA,KAUO;EAAA,IATPC,MASO,QATPA,MASO;EAAA,IARPC,KAQO,QARPA,KAQO;EAAA,IAPPC,YAOO,QAPPA,YAOO;EAAA,IANPC,QAMO,QANPA,QAMO;EAAA,IALPC,UAKO,QALPA,UAKO;EAAA,IAJPC,SAIO,QAJPA,SAIO;EAAA,qBAFPC,IAEO;EAAA,IAFPA,IAEO,0BAFA,MAEA;EAAA,IADJC,IACI;;EACP,IAAMC,UAAU,GAAGd,QAAQ;IAC1BE,GAAG,EAAHA,GAD0B;IAE1BG,KAAK,EAALA,KAF0B;IAG1BC,MAAM,EAANA,MAH0B;IAI1BC,KAAK,EAALA,KAJ0B;IAK1BC,YAAY,EAAZA,YAL0B;IAM1BC,QAAQ,EAARA,QAN0B;IAO1BC,UAAU,EAAVA,UAP0B;IAQ1BC,SAAS,EAATA,SAR0B;IAS1BC,IAAI,EAAJA;EAT0B,GAUvBC,IAVuB,EAA3B;EAaA,oBACC,oBAAC,cAAD,EAAoBC,UAApB,CADD;AAGA;;AAEDb,KAAK,gBAAGH,KAAK,CAACiB,UAAN,CAAiBd,KAAjB,CAAR;AAEAA,KAAK,CAACe,SAAN,GAAkB;EACjB;EACAX,KAAK,EAAEN,SAAS,CAACkB,IAAV,CAAeC,UAFL;EAIjB;EACAZ,MAAM,EAAEP,SAAS,CAACkB,IAAV,CAAeC,UALN;EAOjB;EACAf,cAAc,EAAEJ,SAAS,CAACoB,WART;EAUjB;EACAP,IAAI,EAAEb,SAAS,CAACqB,MAXC;EAajB;EACAb,KAAK,EAAER,SAAS,CAACqB,MAdA;EAgBjB;EACAZ,YAAY,EAAET,SAAS,CAACqB,MAjBP;EAmBjB;EACAX,QAAQ,EAAEV,SAAS,CAACkB,IApBH;EAsBjB;EACA;EACAP,UAAU,EAAEX,SAAS,CAACsB,IAxBL;EA0BjB;EACAV,SAAS,EAAEZ,SAAS,CAACkB,IA3BJ;EA4BjBK,KAAK,EAAEvB,SAAS,CAACkB,IA5BA;EA6BjBM,OAAO,EAAExB,SAAS,CAACkB;AA7BF,CAAlB;AAgCA,eAAehB,KAAf"}